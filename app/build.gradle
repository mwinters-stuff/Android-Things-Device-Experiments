/*
 * Copyright 2016, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'
//
//configurations {
//    apt
//}


android {
    compileSdkVersion 24
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.example.androidthings.pca6895servotest"
        minSdkVersion 24
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        jackOptions {
            enabled false
        }
//        javaCompileOptions{
//            annotationProcessorOptions
//        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    annotationProcessor "org.androidannotations:androidannotations:4.2.0"
    compile "org.androidannotations:androidannotations-api:4.2.0"

    provided 'com.google.android.things:androidthings:0.1-devpreview'
    compile 'com.appyvet:materialrangebar:1.3'

    //androidTestApt "org.androidannotations:androidannotations:4.2.0"
}


//apt {
//    arguments {
//        resourcePackageName android.defaultConfig.applicationId
//        androidManifestFile variant.outputs.head().processResources.manifestFile
//    }
//}

android.applicationVariants.all { variant ->
    variant.variantData.variantConfiguration.javaCompileOptions.annotationProcessorOptions
            .arguments = ['androidManifestFile': variant.outputs[0]?.processResources?.manifestFile?.absolutePath]

}
